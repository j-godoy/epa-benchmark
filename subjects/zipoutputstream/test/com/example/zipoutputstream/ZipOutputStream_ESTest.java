/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 22 19:22:45 GMT 2018
 */

package com.example.zipoutputstream;

import org.junit.Test;
import static org.junit.Assert.*;
import com.example.zipoutputstream.MockZipEntry;
import com.example.zipoutputstream.ZipOutputStream;
import java.util.zip.ZipException;

public class ZipOutputStream_ESTest {

  @Test(timeout = 1300)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ZipOutputStream zipOutputStream0 = new ZipOutputStream();
      try { 
        zipOutputStream0.write(byteArray0, 1, 1);
        fail("Expecting exception: ZipException");
      
      } catch(ZipException e) {
         //
         // no current ZIP entry
         //
      }
  }

  @Test(timeout = 1300)
  public void test1()  throws Throwable  {
      ZipOutputStream zipOutputStream0 = new ZipOutputStream();
      // Undeclared exception!
      try { 
        zipOutputStream0.write((byte[]) null, 215, 215);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 1300)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ZipOutputStream zipOutputStream0 = new ZipOutputStream();
      // Undeclared exception!
      try { 
        zipOutputStream0.write(byteArray0, 29, 29);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 1300)
  public void test3()  throws Throwable  {
      ZipOutputStream zipOutputStream0 = new ZipOutputStream();
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        zipOutputStream0.write(byteArray0, 1005, (-42));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 1300)
  public void test4()  throws Throwable  {
      ZipOutputStream zipOutputStream0 = new ZipOutputStream();
      byte[] byteArray0 = new byte[6];
      zipOutputStream0.write(byteArray0, (int) (byte)0, (int) (byte)0);
      assertEquals(8, ZipOutputStream.DEFLATED);
  }

  @Test(timeout = 1300)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ZipOutputStream zipOutputStream0 = new ZipOutputStream();
      // Undeclared exception!
      try { 
        zipOutputStream0.write(byteArray0, (-74), (-74));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 1300)
  public void test6()  throws Throwable  {
      ZipOutputStream zipOutputStream0 = new ZipOutputStream();
      // Undeclared exception!
      try { 
        zipOutputStream0.putNextEntry((MockZipEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 1300)
  public void test7()  throws Throwable  {
      ZipOutputStream zipOutputStream0 = new ZipOutputStream();
      zipOutputStream0.closeEntry();
      assertEquals(8, ZipOutputStream.DEFLATED);
  }
}
