/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 22 19:22:45 GMT 2018
 */

package com.example.zipoutputstream;

import static org.junit.Assert.*;

import java.io.IOException;

import org.junit.Test;
import com.example.zipoutputstream.MockZipEntry;
import com.example.zipoutputstream.ZipOutputStream;

public class ZipOutputStream_Test {

  @Test(timeout = 4000)
  public void test_s1_to_s1()  throws Throwable  {
      ZipOutputStream zipOutputStream0 = new ZipOutputStream();
      zipOutputStream0.closeEntry();
//      assertEquals(true, zipOutputStream0.stateS1());
  }
  
  @Test(timeout = 4000)
  public void test_s1_to_s3()  throws Throwable  {
      ZipOutputStream zipOutputStream0 = new ZipOutputStream();
      MockZipEntry ze = new MockZipEntry("name");
      zipOutputStream0.putNextEntry(ze);
//      assertEquals(true, zipOutputStream0.stateS3());
  }
  
  @Test(timeout = 4000)
  public void test_s1_to_s2()  throws Throwable  {
      ZipOutputStream zipOutputStream0 = new ZipOutputStream();
      zipOutputStream0.close();
//      assertEquals(true, zipOutputStream0.stateS2());
  }
  
  @Test(timeout = 1300)
  public void test_s3_to_s1()  throws Throwable  {
	  ZipOutputStream zipOutputStream0 = new ZipOutputStream();
	  MockZipEntry ze = new MockZipEntry("name");
      zipOutputStream0.putNextEntry(ze);
      zipOutputStream0.closeEntry();
//      assertEquals(true, zipOutputStream0.stateS1());
  }
  
  @Test(timeout = 1300)
  public void test_s3_to_s3_1()  throws Throwable  {
	  ZipOutputStream zipOutputStream0 = new ZipOutputStream();
	  MockZipEntry ze = new MockZipEntry("name");
      zipOutputStream0.putNextEntry(ze);
      zipOutputStream0.write(new byte[2]);
//      assertEquals(true, zipOutputStream0.stateS3());
  }
  
  @Test(timeout = 1300)
  public void test_s3_to_s3_2()  throws Throwable  {
	  ZipOutputStream zipOutputStream0 = new ZipOutputStream();
	  MockZipEntry ze = new MockZipEntry("name");
      zipOutputStream0.putNextEntry(ze);
      ze = new MockZipEntry("names");
      zipOutputStream0.putNextEntry(ze);
//      assertEquals(true, zipOutputStream0.stateS3());
  }
  
  @Test(timeout = 1300)
  public void test_s3_to_s2()  throws Throwable  {
	  ZipOutputStream zipOutputStream0 = new ZipOutputStream();
	  MockZipEntry ze = new MockZipEntry("name");
      zipOutputStream0.putNextEntry(ze);
      zipOutputStream0.close();
//      assertEquals(true, zipOutputStream0.stateS2());
  }
  
  @Test(timeout = 1300)
  public void test_s2_to_s2()  throws Throwable  {
	  ZipOutputStream zipOutputStream0 = new ZipOutputStream();
	  MockZipEntry ze = new MockZipEntry("name");
      zipOutputStream0.putNextEntry(ze);
      zipOutputStream0.close();
      zipOutputStream0.close();
//      assertEquals(true, zipOutputStream0.stateS2());
  }
  
}
