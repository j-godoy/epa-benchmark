/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 05 21:38:12 GMT 2018
 */

package com.example.stackar;

import org.junit.Test;
import static org.junit.Assert.*;
import com.example.stackar.StackAr;

public class StackAr_ESTest {

  @Test(timeout = 1300)
  public void test00()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2);
      stackAr0.push((Object) null);
      stackAr0.push((Object) null);
      stackAr0.pop();
      stackAr0.push((Object) null);
      stackAr0.topAndPop();
      stackAr0.makeEmpty();
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test01()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.topAndPop();
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test02()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      stackAr0.push((Object) null);
      stackAr0.topAndPop();
      stackAr0.push((Object) null);
      assertTrue(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test03()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = stackAr0.topAndPop();
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.push(object0);
      stackAr0.topAndPop();
      stackAr0.topAndPop();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test04()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      stackAr0.push((Object) null);
      stackAr0.top();
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test05()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      stackAr0.push((Object) null);
      stackAr0.top();
      try { 
        stackAr0.push((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 1300)
  public void test06()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      stackAr0.push((Object) null);
      stackAr0.top();
      stackAr0.topAndPop();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test07()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2);
      stackAr0.push((Object) null);
      stackAr0.push((Object) null);
      stackAr0.pop();
      stackAr0.makeEmpty();
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test08()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2);
      stackAr0.push((Object) null);
      stackAr0.push((Object) null);
      stackAr0.pop();
      boolean boolean0 = stackAr0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 1300)
  public void test09()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.makeEmpty();
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test10()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.push(object0);
      stackAr0.makeEmpty();
      stackAr0.makeEmpty();
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test11()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.isFull();
      stackAr0.makeEmpty();
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test12()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = stackAr0.topAndPop();
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.push(object0);
      stackAr0.isFull();
      try { 
        stackAr0.push(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 1300)
  public void test13()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.isFull();
      stackAr0.topAndPop();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test14()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.push(object0);
      stackAr0.isEmpty();
      stackAr0.makeEmpty();
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test15()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2230);
      Object object0 = stackAr0.topAndPop();
      stackAr0.push("");
      stackAr0.push("");
      stackAr0.topAndPop();
      stackAr0.push(object0);
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test16()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1654);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.push(object0);
      stackAr0.topAndPop();
      boolean boolean0 = stackAr0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 1300)
  public void test17()  throws Throwable  {
      StackAr stackAr0 = new StackAr(709);
      stackAr0.push((Object) null);
      stackAr0.topAndPop();
      stackAr0.makeEmpty();
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test18()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1477);
      stackAr0.push((Object) null);
      stackAr0.topAndPop();
      stackAr0.push((Object) null);
      assertFalse(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test19()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1798);
      Object object0 = stackAr0.topAndPop();
      stackAr0.push(object0);
      stackAr0.topAndPop();
      stackAr0.topAndPop();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test20()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1798);
      Object object0 = stackAr0.topAndPop();
      stackAr0.push((Object) null);
      stackAr0.push(object0);
      stackAr0.topAndPop();
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test21()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1798);
      stackAr0.push((Object) null);
      stackAr0.top();
      stackAr0.makeEmpty();
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test22()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1654);
      Object object0 = new Object();
      stackAr0.push(object0);
      Object object1 = stackAr0.top();
      stackAr0.push(object1);
      assertFalse(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test23()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2230);
      stackAr0.push("");
      stackAr0.top();
      boolean boolean0 = stackAr0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 1300)
  public void test24()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2);
      stackAr0.push((Object) null);
      stackAr0.push((Object) null);
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test25()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2);
      stackAr0.push((Object) null);
      stackAr0.push((Object) null);
      try { 
        stackAr0.push((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 1300)
  public void test26()  throws Throwable  {
      StackAr stackAr0 = new StackAr(709);
      stackAr0.push((Object) null);
      stackAr0.push(stackAr0);
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test27()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1451);
      String string0 = (String)stackAr0.topAndPop();
      stackAr0.push(string0);
      stackAr0.push(string0);
      stackAr0.push((Object) null);
      assertFalse(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test28()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1654);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.makeEmpty();
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test29()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2230);
      stackAr0.push("");
      stackAr0.push("");
      stackAr0.pop();
      boolean boolean0 = stackAr0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 1300)
  public void test30()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2265);
      Object object0 = stackAr0.topAndPop();
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.push("");
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test31()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1654);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.pop();
      Object object1 = stackAr0.topAndPop();
      assertNull(object1);
  }

  @Test(timeout = 1300)
  public void test32()  throws Throwable  {
      StackAr stackAr0 = new StackAr(582);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.makeEmpty();
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test33()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1798);
      Object object0 = stackAr0.topAndPop();
      stackAr0.push((Object) null);
      stackAr0.makeEmpty();
      stackAr0.push(object0);
      assertFalse(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test34()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2230);
      stackAr0.push("");
      stackAr0.isFull();
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test35()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1798);
      stackAr0.push((Object) null);
      boolean boolean0 = stackAr0.isFull();
      boolean boolean1 = stackAr0.isFull();
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 1300)
  public void test36()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1654);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.isFull();
      Object object1 = stackAr0.top();
      assertSame(object1, object0);
  }

  @Test(timeout = 1300)
  public void test37()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1451);
      String string0 = (String)stackAr0.topAndPop();
      stackAr0.push(string0);
      stackAr0.push(string0);
      stackAr0.pop();
      stackAr0.push((Object) null);
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test38()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2230);
      Object object0 = stackAr0.topAndPop();
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test39()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1654);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.isEmpty();
      stackAr0.makeEmpty();
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test40()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1451);
      String string0 = (String)stackAr0.topAndPop();
      stackAr0.push(string0);
      stackAr0.isEmpty();
      stackAr0.push(string0);
      assertFalse(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test41()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2);
      stackAr0.topAndPop();
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test42()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = stackAr0.topAndPop();
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.top();
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test43()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1798);
      Object object0 = stackAr0.topAndPop();
      stackAr0.top();
      stackAr0.push(object0);
      assertFalse(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test44()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = stackAr0.topAndPop();
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.top();
      stackAr0.top();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test45()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      stackAr0.push((Object) null);
      stackAr0.makeEmpty();
      stackAr0.push((Object) null);
      assertTrue(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test46()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.push(object0);
      stackAr0.isEmpty();
      try { 
        stackAr0.push(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 1300)
  public void test47()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1451);
      stackAr0.push("mF@O6PT $P5+-3S8U");
      stackAr0.makeEmpty();
      String string0 = (String)stackAr0.topAndPop();
      assertNull(string0);
  }

  @Test(timeout = 1300)
  public void test48()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2);
      stackAr0.push((Object) null);
      stackAr0.push((Object) null);
      stackAr0.pop();
      stackAr0.push((Object) null);
      stackAr0.topAndPop();
      stackAr0.top();
      assertFalse(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test49()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1798);
      stackAr0.makeEmpty();
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test50()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2);
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
      
      stackAr0.push((Object) null);
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test51()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1798);
      stackAr0.makeEmpty();
      boolean boolean0 = stackAr0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 1300)
  public void test52()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      stackAr0.isFull();
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test53()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      Object object0 = new Object();
      boolean boolean0 = stackAr0.isFull();
      assertFalse(boolean0);
      
      stackAr0.push(object0);
      assertTrue(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test54()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2);
      boolean boolean0 = stackAr0.isFull();
      assertFalse(boolean0);
      
      stackAr0.topAndPop();
      assertTrue(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test55()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      stackAr0.isEmpty();
      stackAr0.makeEmpty();
      assertTrue(stackAr0.isEmpty());
      assertFalse(stackAr0.isFull());
  }

  @Test(timeout = 1300)
  public void test56()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1798);
      boolean boolean0 = stackAr0.isEmpty();
      assertTrue(boolean0);
      
      stackAr0.push((Object) null);
      assertFalse(stackAr0.isEmpty());
  }

  @Test(timeout = 1300)
  public void test57()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1798);
      stackAr0.isEmpty();
      boolean boolean0 = stackAr0.isEmpty();
      assertTrue(boolean0);
  }
}
