/*
 * This file was automatically generated by EvoSuite
 * Wed May 09 19:02:07 GMT 2018
 */

package com.example.socket;

import org.junit.Test;
import static org.junit.Assert.*;
import com.example.socket.MockEnvironment;
import com.example.socket.MockInet4Address;
import com.example.socket.MockInetAddress;
import com.example.socket.MockInetSocketAddress;
import com.example.socket.MockSocketAddress;
import com.example.socket.Pair;
import com.example.socket.Socket;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.SocketException;

public class Socket_ESTest_2 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("npQv]'", 3777);
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0);
      mockEnvironment0.pushIOException(true);
      int int1 = socket0.shutdownOutput();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("", 3746);
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0, 256);
      mockEnvironment0.pushIOException(true);
      int int1 = socket0.shutdownInput();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("npQv]'", 3777);
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0);
      mockEnvironment0.pushIOException(true);
      // Undeclared exception!
      try { 
        socket0.getOutputStream();
      } catch(ClassCastException e) {
         //
         // com.example.socket.MockIOException cannot be cast to java.io.IOException
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress((-1823));
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0);
      mockEnvironment0.pushIOException(true);
      // Undeclared exception!
      try { 
        socket0.getInputStream();
      } catch(ClassCastException e) {
         //
         // com.example.socket.MockIOException cannot be cast to java.io.IOException
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      mockEnvironment0.pushIOException(true);
      Socket socket0 = new Socket(mockEnvironment0);
      int int0 = socket0.bind((MockSocketAddress) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("", 3746);
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0, 256);
      int int1 = socket0.shutdownOutput();
      try { 
        socket0.shutdownOutput();
      } catch(Exception e) {
         //
         // Socket output is already shutdown
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Socket socket0 = new Socket();
      int int0 = socket0.close();
      try { 
        socket0.shutdownOutput();
      } catch(Exception e) {
         //
         // Socket is closed
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Socket socket0 = new Socket();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(31);
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0, 31);
      int int1 = socket0.shutdownInput();
      try { 
        socket0.shutdownInput();
      } catch(Exception e) {
         //
         // Socket input is already shutdown
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Socket socket0 = new Socket();
      int int0 = socket0.close();
      try { 
        socket0.shutdownInput();
      } catch(Exception e) {
         //
         // Socket is closed
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Socket socket0 = new Socket();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress((MockInetAddress) null, (-3177));
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0);
      int int1 = socket0.shutdownOutput();
      try { 
        socket0.getOutputStream();
      } catch(Exception e) {
         //
         // Socket output is shutdown
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Socket socket0 = new Socket();
      try { 
        socket0.getOutputStream();
      } catch(Exception e) {
         //
         // Socket is not connected
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Socket socket0 = new Socket();
      int int0 = socket0.close();
      try { 
        socket0.getOutputStream();
      } catch(Exception e) {
         //
         // Socket is closed
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Socket socket0 = new Socket();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(3737);
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0, 3737);
      int int1 = socket0.shutdownInput();
      try { 
        socket0.getInputStream();
      } catch(Exception e) {
         //
         // Socket input is shutdown
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Socket socket0 = new Socket();
      try { 
        socket0.getInputStream();
      } catch(Exception e) {
         //
         // Socket is not connected
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Socket socket0 = new Socket();
      int int0 = socket0.close();
      try { 
        socket0.getInputStream();
      } catch(Exception e) {
         //
         // Socket is closed
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Socket socket0 = new Socket();
      MockInetAddress mockInetAddress0 = new MockInetAddress((String) null);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(mockInetAddress0, 3246);
      // Undeclared exception!
      try { 
        socket0.connect((MockSocketAddress) mockInetSocketAddress0);
      } catch(IllegalArgumentException e) {
         //
         // connect: invalid address type
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      socket0.bind((MockSocketAddress) null);
      mockEnvironment0.pushIOException(true);
      int int1 = socket0.connect((MockSocketAddress) null, 295);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Socket socket0 = new Socket();
      MockInet4Address mockInet4Address0 = new MockInet4Address("bind");
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress((MockInetAddress) mockInet4Address0, 0);
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0, 0);
      try { 
        socket0.bind(mockInetSocketAddress0);
      } catch(Exception e) {
         //
         // Already bound
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      mockEnvironment0.pushIOException(true);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress((MockInetAddress) null, 622);
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0);
      try { 
        socket0.bind(mockInetSocketAddress0);
      } catch(Exception e) {
         //
         // Socket is closed
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Socket socket0 = new Socket();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(2280);
      int int0 = socket0.bind(mockInetSocketAddress0);
      int int1 = socket0.connect((MockSocketAddress) mockInetSocketAddress0, 2280);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Socket socket0 = new Socket();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress((-95));
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0, 820);
      try { 
        socket0.connect((MockSocketAddress) mockInetSocketAddress0);
      } catch(Exception e) {
         //
         // already connected
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Socket socket0 = new Socket();
      int int0 = socket0.close();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(0);
      try { 
        socket0.connect((MockSocketAddress) mockInetSocketAddress0, 0);
      } catch(Exception e) {
         //
         // Socket is closed
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      try { 
        socket0.shutdownInput();
      } catch(Exception e) {
         //
         // Socket is not connected
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Socket socket0 = new Socket();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress((-16));
      // Undeclared exception!
      try { 
        socket0.connect((MockSocketAddress) mockInetSocketAddress0, (-16));
      } catch(Exception e) {
         //
         // connect: timeout can't be negative
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      try { 
        socket0.shutdownOutput();
      } catch(Exception e) {
         //
         // Socket is not connected
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("npQv]'", 3777);
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0);
      Pair<Integer, OutputStream> pair0 = socket0.getOutputStream();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("", 3746);
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0, 256);
      Pair<Integer, InputStream> pair0 = socket0.getInputStream();
  }
  
  @Test//(timeout = 4000)
  public void test01_2()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress((-2460));
      Socket socket0 = new Socket(mockEnvironment0);
      try {
        socket0.bind(mockInetSocketAddress0);
        fail("Expecting exception: IOException");

      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
  
  @Test(timeout = 4000)
  public void test01_3()  throws Throwable  {
      MockEnvironment mockEnvironment0 = new MockEnvironment();
      Socket socket0 = new Socket(mockEnvironment0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("", 3746);
      int int0 = socket0.connect((MockSocketAddress) mockInetSocketAddress0, 256);
      //mockEnvironment0.pushIOException(true);
      socket0.close();
      try
      {
    	  int int1 = socket0.shutdownInput();
    	  fail();
      } catch(Exception e)
      {
    	  
      }
      
  }
}
